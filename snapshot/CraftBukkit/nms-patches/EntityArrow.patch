--- a/net/minecraft/server/EntityArrow.java
+++ b/net/minecraft/server/EntityArrow.java
@@ -5,6 +5,13 @@
 import java.util.List;
 import javax.annotation.Nullable;
 
+// CraftBukkit start
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.EntityCombustEvent;
+import org.bukkit.event.player.PlayerPickupArrowEvent;
+// CraftBukkit end
+
 public abstract class EntityArrow extends Entity implements IProjectile {
 
     private static final Predicate<Entity> f = Predicates.and(new Predicate[] { IEntitySelector.e, IEntitySelector.a, new Predicate() {
@@ -17,9 +24,9 @@
         }
     }});
     private static final DataWatcherObject<Byte> g = DataWatcher.a(EntityArrow.class, DataWatcherRegistry.a);
-    private int h;
-    private int at;
-    private int au;
+    public int h; // PAIL: private->public
+    public int at; // PAIL: private->public
+    public int au; // PAIL: private->public
     private Block av;
     private int aw;
     public boolean inGround;
@@ -50,6 +57,7 @@
     public EntityArrow(World world, EntityLiving entityliving) {
         this(world, entityliving.locX, entityliving.locY + (double) entityliving.getHeadHeight() - 0.10000000149011612D, entityliving.locZ);
         this.shooter = entityliving;
+        this.projectileSource = (LivingEntity) entityliving.getBukkitEntity(); // CraftBukkit
         if (entityliving instanceof EntityHuman) {
             this.fromPlayer = EntityArrow.PickupStatus.ALLOWED;
         }
@@ -65,13 +73,23 @@
         float f6 = -MathHelper.sin(f * 0.017453292F);
         float f7 = MathHelper.cos(f1 * 0.017453292F) * MathHelper.cos(f * 0.017453292F);
 
+        // SportBukkit start - use attributes
+        final double velocityTransfer;
+        if(entity instanceof EntityLiving) {
+            final EntityLiving entityLiving = (EntityLiving) entity;
+            f4 = (float) entityLiving.getAttributeInstance(EntityLiving.ARROW_ACCURACY).getValue();
+            velocityTransfer = entityLiving.getAttributeInstance(EntityLiving.ARROW_VELOCITY_TRANSFER).getValue();
+        } else {
+            velocityTransfer = 1;
+        }
+
         this.shoot((double) f5, (double) f6, (double) f7, f3, f4);
-        this.motX += entity.motX;
-        this.motZ += entity.motZ;
+        this.motX += entity.motX * velocityTransfer;
+        this.motZ += entity.motZ * velocityTransfer;
         if (!entity.onGround) {
-            this.motY += entity.motY;
+            this.motY += entity.motY * velocityTransfer;
         }
-
+        // SportBukkit end
     }
 
     public void shoot(double d0, double d1, double d2, float f, float f1) {
@@ -236,7 +254,7 @@
 
     protected void a(MovingObjectPosition movingobjectposition) {
         Entity entity = movingobjectposition.entity;
-
+        org.bukkit.craftbukkit.event.CraftEventFactory.callProjectileHitEvent(this, movingobjectposition); // CraftBukkit - Call event
         if (entity != null) {
             float f = MathHelper.sqrt(this.motX * this.motX + this.motY * this.motY + this.motZ * this.motZ);
             int i = MathHelper.f((double) f * this.damage);
@@ -254,7 +272,13 @@
             }
 
             if (this.isBurning() && !(entity instanceof EntityEnderman)) {
-                entity.setOnFire(5);
+                // CraftBukkit start
+                EntityCombustByEntityEvent combustEvent = new EntityCombustByEntityEvent(this.getBukkitEntity(), entity.getBukkitEntity(), 5);
+                org.bukkit.Bukkit.getPluginManager().callEvent(combustEvent);
+                if (!combustEvent.isCancelled()) {
+                    entity.setOnFire(combustEvent.getDuration());
+                }
+                // CraftBukkit end
             }
 
             if (entity.damageEntity(damagesource, (float) i)) {
@@ -269,7 +293,7 @@
                         float f1 = MathHelper.sqrt(this.motX * this.motX + this.motZ * this.motZ);
 
                         if (f1 > 0.0F) {
-                            entityliving.f(this.motX * (double) this.knockbackStrength * 0.6000000238418579D / (double) f1, 0.1D, this.motZ * (double) this.knockbackStrength * 0.6000000238418579D / (double) f1);
+                            entityliving.applyKnockback(this, this.motX * (double) this.knockbackStrength * 0.6000000238418579D / (double) f1, 0.1D, this.motZ * (double) this.knockbackStrength * 0.6000000238418579D / (double) f1, false); // SportBukkit - call knockback method
                         }
                     }
 
@@ -422,9 +446,22 @@
 
     public void d(EntityHuman entityhuman) {
         if (!this.world.isClientSide && this.inGround && this.shake <= 0) {
+            // CraftBukkit start
+            ItemStack itemstack = this.j(); // PAIL: rename
+            EntityItem item = new EntityItem(this.world, this.locX, this.locY, this.locZ, itemstack);
+            if (this.fromPlayer == PickupStatus.ALLOWED && entityhuman.inventory.canHold(itemstack) > 0) {
+                PlayerPickupArrowEvent event = new PlayerPickupArrowEvent((org.bukkit.entity.Player) entityhuman.getBukkitEntity(), new org.bukkit.craftbukkit.entity.CraftItem(this.world.getServer(), this, item), (org.bukkit.entity.Arrow) this.getBukkitEntity());
+                // event.setCancelled(!entityhuman.canPickUpLoot); TODO
+                this.world.getServer().getPluginManager().callEvent(event);
+
+                if (event.isCancelled()) {
+                    return;
+                }
+            }
             boolean flag = this.fromPlayer == EntityArrow.PickupStatus.ALLOWED || this.fromPlayer == EntityArrow.PickupStatus.CREATIVE_ONLY && entityhuman.abilities.canInstantlyBuild;
 
-            if (this.fromPlayer == EntityArrow.PickupStatus.ALLOWED && !entityhuman.inventory.pickup(this.j())) {
+            if (this.fromPlayer == EntityArrow.PickupStatus.ALLOWED && !entityhuman.inventory.pickup(item.getItemStack())) {
+                // CraftBukkit end
                 flag = false;
             }
 
@@ -442,10 +479,12 @@
         return false;
     }
 
+    public void setDamage(double damage) { this.c(damage); } // SportBukkit - alias for following method
     public void c(double d0) {
         this.damage = d0;
     }
 
+    public double getDamage() { return this.k(); } // SportBukkit - alias for following method
     public double k() {
         return this.damage;
     }
@@ -493,7 +532,14 @@
         }
 
         if (EnchantmentManager.a(Enchantments.ARROW_FIRE, entityliving) > 0) {
-            this.setOnFire(100);
+            // CraftBukkit start - call EntityCombustEvent
+            EntityCombustEvent event = new EntityCombustEvent(this.getBukkitEntity(), 100);
+            this.world.getServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled()) {
+                this.setOnFire(event.getDuration());
+            }
+            // CraftBukkit end
         }
 
     }
