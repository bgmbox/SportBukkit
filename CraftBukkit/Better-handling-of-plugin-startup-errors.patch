From db19bda4e2a747489c1bb5b767516b942984f670 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Tue, 9 Dec 2014 02:08:38 -0500
Subject: [PATCH] Better handling of plugin startup errors


diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index acc653f..3f7cac0 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -364,7 +364,7 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
     }
 
     public void B() {
-        System.exit(0);
+        System.exit(abnormalTermination ? 1 : 0);
     }
 
     public void D() { // CraftBukkit - fix decompile error
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index bf3f88f..bdff1b4 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -122,8 +122,10 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
     private static final int TPS = 20;
     private static final int TICK_TIME = 1000000000 / TPS;
     private static final int SAMPLE_INTERVAL = 100;
-    public final double[] recentTps = new double[ 3 ];
-    // SportBukkit end
+    public final double[] recentTps = new double[3];
+
+    protected boolean abnormalTermination;
+    // Sportbukkit end
 
     public MinecraftServer(OptionSet options, Proxy proxy, DataConverterManager dataconvertermanager, YggdrasilAuthenticationService yggdrasilauthenticationservice, MinecraftSessionService minecraftsessionservice, GameProfileRepository gameprofilerepository, UserCache usercache) {
         this.e = proxy;
@@ -572,8 +574,10 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
             } else {
                 // CraftBukkit - if init fails, stop the server
                 // this.a((CrashReport) null);
+                this.abnormalTermination = true; // SportBukkit
             }
         } catch (Throwable throwable) {
+            this.abnormalTermination = true; // SportBukkit
             MinecraftServer.LOGGER.error("Encountered an unexpected exception", throwable);
             CrashReport crashreport = null;
 
@@ -909,6 +913,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
             // CraftBukkit end
         } catch (Exception exception) {
             MinecraftServer.LOGGER.fatal("Failed to start the minecraft server", exception);
+            System.exit(1); // Sportbukkit
         }
 
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index f003ad4..f7a5742 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -298,6 +298,12 @@ public final class CraftServer implements Server {
         }
     }
 
+    private void pluginFailedToLoad(Plugin plugin) {
+        if(getRequireAllPlugins()) {
+            throw new RuntimeException("Required plugin " + plugin.getDescription().getFullName() + " failed to load (server will shutdown)");
+        }
+    }
+
     public void loadPlugins() {
         pluginManager.registerInterface(JavaPluginLoader.class);
 
@@ -310,8 +316,9 @@ public final class CraftServer implements Server {
                     String message = String.format("Loading %s", plugin.getDescription().getFullName());
                     plugin.getLogger().info(message);
                     plugin.onLoad();
-                } catch (Throwable ex) {
+                } catch (RuntimeException ex) {
                     Logger.getLogger(CraftServer.class.getName()).log(Level.SEVERE, ex.getMessage() + " initializing " + plugin.getDescription().getFullName() + " (Is it up to date?)", ex);
+                    pluginFailedToLoad(plugin);
                 }
             }
         } else {
@@ -369,9 +376,13 @@ public final class CraftServer implements Server {
             pluginManager.dirtyPermissibles();
 
             pluginManager.enablePlugin(plugin);
-        } catch (Throwable ex) {
+        } catch (RuntimeException ex) {
             Logger.getLogger(CraftServer.class.getName()).log(Level.SEVERE, ex.getMessage() + " loading " + plugin.getDescription().getFullName() + " (Is it up to date?)", ex);
         }
+
+        if (!plugin.isEnabled()) {
+            pluginFailedToLoad(plugin);
+        }
     }
 
     @Override
@@ -534,6 +545,10 @@ public final class CraftServer implements Server {
         return this.configuration.getBoolean("settings.query-plugins");
     }
 
+    public boolean getRequireAllPlugins() {
+        return this.configuration.getBoolean("settings.require-all-plugins");
+    }
+
     @Override
     public boolean hasWhitelist() {
         return this.getConfigBoolean("white-list", false);
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index 4467eee..14275ec 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -186,6 +186,7 @@ public class Main {
                 MinecraftServer.main(options);
             } catch (Throwable t) {
                 t.printStackTrace();
+                System.exit(1); // SportBukkit
             }
         }
     }
diff --git a/src/main/resources/configurations/bukkit.yml b/src/main/resources/configurations/bukkit.yml
index 5a58390..5230fd4 100644
--- a/src/main/resources/configurations/bukkit.yml
+++ b/src/main/resources/configurations/bukkit.yml
@@ -20,6 +20,7 @@ settings:
     plugin-profiling: false
     connection-throttle: 4000
     query-plugins: true
+    require-all-plugins: false
     deprecated-verbose: default
     shutdown-message: Server closed
     bungeecord: false
