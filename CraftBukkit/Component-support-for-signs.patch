From 6d3aecc5e14ff499151e08ea4ac211b6fa8ca5a9 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Fri, 3 Jun 2016 02:02:17 -0400
Subject: [PATCH] Component support for signs


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index eb326b8..6745c8c 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -12,6 +12,8 @@ import java.util.Arrays;
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.Set;
+import net.md_5.bungee.api.chat.BaseComponent;
+import net.md_5.bungee.api.chat.TextComponent;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -25,6 +27,7 @@ import org.bukkit.craftbukkit.entity.CraftPlayer;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.util.BungeeChatUtils;
 import org.bukkit.craftbukkit.util.CraftChatMessage;
 import org.bukkit.craftbukkit.util.LazyPlayerSet;
 import org.bukkit.craftbukkit.util.Waitable;
@@ -2254,16 +2257,18 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
             int x = packetplayinupdatesign.a().getX();
             int y = packetplayinupdatesign.a().getY();
             int z = packetplayinupdatesign.a().getZ();
-            String[] lines = new String[4];
+            BaseComponent[] lines = new BaseComponent[4];
 
             for (int i = 0; i < astring.length; ++i) {
-                lines[i] = EnumChatFormat.a(new ChatComponentText(EnumChatFormat.a(astring[i])).toPlainText());
+                lines[i] = new TextComponent(EnumChatFormat.a(astring[i]));
             }
             SignChangeEvent event = new SignChangeEvent((org.bukkit.craftbukkit.block.CraftBlock) player.getWorld().getBlockAt(x, y, z), this.server.getPlayer(this.player), lines);
             this.server.getPluginManager().callEvent(event);
 
             if (!event.isCancelled()) {
-                System.arraycopy(org.bukkit.craftbukkit.block.CraftSign.sanitizeLines(event.getLines()), 0, tileentitysign.lines, 0, 4);
+                for(int i = 0; i < tileentitysign.lines.length; i++) {
+                    tileentitysign.lines[i] = BungeeChatUtils.toNms(event.line(i));
+                }
                 tileentitysign.isEditable = false;
              }
             // CraftBukkit end
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftSign.java b/src/main/java/org/bukkit/craftbukkit/block/CraftSign.java
index 7a8d445..4938e2e 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftSign.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftSign.java
@@ -1,79 +1,70 @@
 package org.bukkit.craftbukkit.block;
 
-import net.minecraft.server.ChatComponentText;
-import net.minecraft.server.IChatBaseComponent;
+import net.md_5.bungee.api.chat.BaseComponent;
+import net.md_5.bungee.api.chat.TextComponent;
 import net.minecraft.server.TileEntitySign;
 import org.bukkit.Material;
 import org.bukkit.block.Block;
 import org.bukkit.block.Sign;
-import org.bukkit.craftbukkit.util.CraftChatMessage;
+import org.bukkit.craftbukkit.util.BungeeChatUtils;
 
 public class CraftSign extends CraftBlockEntityState<TileEntitySign> implements Sign {
 
-    private String[] lines;
+    private BaseComponent[] lines = new BaseComponent[4];
 
     public CraftSign(final Block block) {
         super(block, TileEntitySign.class);
+        importFromNms();
     }
 
     public CraftSign(final Material material, final TileEntitySign te) {
         super(material, te);
+        importFromNms();
+    }
+
+    private void importFromNms() {
+        lines = new BaseComponent[4];
+        for(int i = 0; i < lines.length; i++) {
+            lines[i] = getTileEntity().lines.length > i ? BungeeChatUtils.toBungee(getTileEntity().lines[i])
+                    : new TextComponent();
+        }
     }
 
     @Override
     public void load(TileEntitySign sign) {
         super.load(sign);
 
-        lines = new String[sign.lines.length];
-        System.arraycopy(revertComponents(sign.lines), 0, lines, 0, lines.length);
+        importFromNms();
     }
 
     @Override
-    public String[] getLines() {
+    public BaseComponent[] lines() {
         return lines;
     }
 
     @Override
-    public String getLine(int index) throws IndexOutOfBoundsException {
+    public BaseComponent line(int index) {
         return lines[index];
     }
 
     @Override
-    public void setLine(int index, String line) throws IndexOutOfBoundsException {
+    public void setLine(int index, BaseComponent line) {
         lines[index] = line;
     }
 
     @Override
-    public void applyTo(TileEntitySign sign) {
-        super.applyTo(sign);
-
-        IChatBaseComponent[] newLines = sanitizeLines(lines);
-        System.arraycopy(newLines, 0, sign.lines, 0, 4);
+    public String[] getLines() {
+        return BaseComponent.toLegacyArray(lines);
     }
 
-    public static IChatBaseComponent[] sanitizeLines(String[] lines) {
-        IChatBaseComponent[] components = new IChatBaseComponent[4];
-
-        for (int i = 0; i < 4; i++) {
-            if (i < lines.length && lines[i] != null) {
-                components[i] = CraftChatMessage.fromString(lines[i])[0];
-            } else {
-                components[i] = new ChatComponentText("");
-            }
-        }
-
-        return components;
+    @Override
+    public String getLine(int index) throws IndexOutOfBoundsException {
+        return lines[index].toLegacyText();
     }
 
-    public static String[] revertComponents(IChatBaseComponent[] components) {
-        String[] lines = new String[components.length];
-        for (int i = 0; i < lines.length; i++) {
-            lines[i] = revertComponent(components[i]);
-        }
-        return lines;
+    @Override
+    public void setLine(int index, String line) throws IndexOutOfBoundsException {
+        lines[index] = TextComponent.fromLegacyToComponent(line, false);
     }
 
-    private static String revertComponent(IChatBaseComponent component) {
-        return CraftChatMessage.fromComponent(component);
-    }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index f0f8b82..7c1dcb4 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -62,6 +62,7 @@ import org.bukkit.craftbukkit.advancement.CraftAdvancementProgress;
 import org.bukkit.craftbukkit.map.CraftMapView;
 import org.bukkit.craftbukkit.map.RenderData;
 import org.bukkit.craftbukkit.scoreboard.CraftScoreboard;
+import org.bukkit.craftbukkit.util.BungeeChatUtils;
 import org.bukkit.craftbukkit.util.CraftChatMessage;
 import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 import org.bukkit.craftbukkit.util.Skins;
@@ -725,23 +726,39 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
     @Override
     public void sendSignChange(Location loc, String[] lines) {
-        if (getHandle().playerConnection == null) {
-            return;
-        }
-
         if (lines == null) {
             lines = new String[4];
         }
+        final IChatBaseComponent[] nms = new IChatBaseComponent[4];
+        for(int i = 0; i < 4; i++) {
+            nms[i] = lines != null && lines[i] == null ? new ChatComponentText("")
+                    : CraftChatMessage.fromString(lines[i])[0];
+        }
+        sendSignChange(loc, nms);
+    }
 
+    @Override
+    public void sendSignChange(Location loc, BaseComponent[] lines) {
+        final IChatBaseComponent[] nms = new IChatBaseComponent[4];
+        for(int i = 0; i < 4; i++) {
+            nms[i] = lines != null && lines[i] == null ? new ChatComponentText("")
+                    : BungeeChatUtils.toNms(lines[i]);
+        }
+        sendSignChange(loc, nms);
+    }
+
+    private void sendSignChange(Location loc, IChatBaseComponent[] lines) {
         Validate.notNull(loc, "Location can not be null");
         if (lines.length < 4) {
             throw new IllegalArgumentException("Must have at least 4 lines");
         }
 
-        IChatBaseComponent[] components = CraftSign.sanitizeLines(lines);
+        if (getHandle().playerConnection == null) {
+            return;
+        }
         TileEntitySign sign = new TileEntitySign();
         sign.setPosition(new BlockPosition(loc.getBlockX(), loc.getBlockY(), loc.getBlockZ()));
-        System.arraycopy(components, 0, sign.lines, 0, sign.lines.length);
+        System.arraycopy(lines, 0, sign.lines, 0, sign.lines.length);
 
         getHandle().playerConnection.sendPacket(sign.getUpdatePacket());
     }
