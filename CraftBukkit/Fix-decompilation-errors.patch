From d3f4cabfdb7001398682e4f682d954ab36764f88 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Tue, 1 Mar 2016 05:48:53 -0500
Subject: [PATCH] Fix decompilation errors


diff --git a/src/main/java/net/minecraft/server/EnumProtocol.java b/src/main/java/net/minecraft/server/EnumProtocol.java
index 19bfe57..3c93c98 100644
--- a/src/main/java/net/minecraft/server/EnumProtocol.java
+++ b/src/main/java/net/minecraft/server/EnumProtocol.java
@@ -159,7 +159,7 @@ public enum EnumProtocol {
     }
 
     protected EnumProtocol a(EnumProtocolDirection enumprotocoldirection, Class<? extends Packet<?>> oclass) {
-        Object object = (BiMap) this.h.get(enumprotocoldirection);
+        BiMap<Integer, Class<? extends Packet<?>>> object = (BiMap) this.h.get(enumprotocoldirection); // SportBukkit - fix decomp error
 
         if (object == null) {
             object = HashBiMap.create();
diff --git a/src/main/java/net/minecraft/server/GameProfileBanList.java b/src/main/java/net/minecraft/server/GameProfileBanList.java
index 737035b..5886e4c 100644
--- a/src/main/java/net/minecraft/server/GameProfileBanList.java
+++ b/src/main/java/net/minecraft/server/GameProfileBanList.java
@@ -52,7 +52,9 @@ public class GameProfileBanList extends JsonList<GameProfile, GameProfileBanEntr
         return (GameProfile) gameprofilebanentry.getKey();
     }
 
+    /* SportBukkit - fix decomp error
     protected String a(Object object) {
         return this.b((GameProfile) object);
     }
+    SportBukkit */
 }
diff --git a/src/main/java/net/minecraft/server/Item.java b/src/main/java/net/minecraft/server/Item.java
index deda40e..97dc673 100644
--- a/src/main/java/net/minecraft/server/Item.java
+++ b/src/main/java/net/minecraft/server/Item.java
@@ -33,7 +33,7 @@ public class Item {
     private String name;
 
     public static int getId(Item item) {
-        return item == null ? 0 : Item.REGISTRY.a((Object) item);
+        return item == null ? 0 : Item.REGISTRY.a(item); // SportBukkit - fix decomp error
     }
 
     public static Item getById(int i) {
diff --git a/src/main/java/net/minecraft/server/ItemBlock.java b/src/main/java/net/minecraft/server/ItemBlock.java
index 60149c1..9d62489 100644
--- a/src/main/java/net/minecraft/server/ItemBlock.java
+++ b/src/main/java/net/minecraft/server/ItemBlock.java
@@ -93,13 +93,6 @@ public class ItemBlock extends Item {
         return this.a.q();
     }
 
-    public void a(CreativeModeTab creativemodetab, NonNullList<ItemStack> nonnulllist) {
-        if (this.a(creativemodetab)) {
-            this.a.a(creativemodetab, nonnulllist);
-        }
-
-    }
-
     public Block getBlock() {
         return this.a;
     }
diff --git a/src/main/java/net/minecraft/server/ItemDye.java b/src/main/java/net/minecraft/server/ItemDye.java
index 2dc18db..b21c05e 100644
--- a/src/main/java/net/minecraft/server/ItemDye.java
+++ b/src/main/java/net/minecraft/server/ItemDye.java
@@ -111,13 +111,4 @@ public class ItemDye extends Item {
             return false;
         }
     }
-
-    public void a(CreativeModeTab creativemodetab, NonNullList<ItemStack> nonnulllist) {
-        if (this.a(creativemodetab)) {
-            for (int i = 0; i < 16; ++i) {
-                nonnulllist.add(new ItemStack(this, 1, i));
-            }
-        }
-
-    }
 }
diff --git a/src/main/java/net/minecraft/server/ItemMonsterEgg.java b/src/main/java/net/minecraft/server/ItemMonsterEgg.java
index b24f7d8..4ce7ffe 100644
--- a/src/main/java/net/minecraft/server/ItemMonsterEgg.java
+++ b/src/main/java/net/minecraft/server/ItemMonsterEgg.java
@@ -185,21 +185,6 @@ public class ItemMonsterEgg extends Item {
         }
     }
 
-    public void a(CreativeModeTab creativemodetab, NonNullList<ItemStack> nonnulllist) {
-        if (this.a(creativemodetab)) {
-            Iterator iterator = EntityTypes.eggInfo.values().iterator();
-
-            while (iterator.hasNext()) {
-                EntityTypes.MonsterEggInfo entitytypes_monsteregginfo = (EntityTypes.MonsterEggInfo) iterator.next();
-                ItemStack itemstack = new ItemStack(this, 1);
-
-                a(itemstack, entitytypes_monsteregginfo.a);
-                nonnulllist.add(itemstack);
-            }
-        }
-
-    }
-
     public static void a(ItemStack itemstack, MinecraftKey minecraftkey) {
         NBTTagCompound nbttagcompound = itemstack.hasTag() ? itemstack.getTag() : new NBTTagCompound();
         NBTTagCompound nbttagcompound1 = new NBTTagCompound();
diff --git a/src/main/java/net/minecraft/server/ItemSkull.java b/src/main/java/net/minecraft/server/ItemSkull.java
index cbb902f..f5e6646 100644
--- a/src/main/java/net/minecraft/server/ItemSkull.java
+++ b/src/main/java/net/minecraft/server/ItemSkull.java
@@ -83,15 +83,6 @@ public class ItemSkull extends Item {
         }
     }
 
-    public void a(CreativeModeTab creativemodetab, NonNullList<ItemStack> nonnulllist) {
-        if (this.a(creativemodetab)) {
-            for (int i = 0; i < ItemSkull.a.length; ++i) {
-                nonnulllist.add(new ItemStack(this, 1, i));
-            }
-        }
-
-    }
-
     public int filterData(int i) {
         return i;
     }
diff --git a/src/main/java/net/minecraft/server/OpList.java b/src/main/java/net/minecraft/server/OpList.java
index e5f457b..bf3bc6e 100644
--- a/src/main/java/net/minecraft/server/OpList.java
+++ b/src/main/java/net/minecraft/server/OpList.java
@@ -28,7 +28,7 @@ public class OpList extends JsonList<GameProfile, OpListEntry> {
         return astring;
     }
 
-    public int a(GameProfile gameprofile) {
+    public int getLevel(GameProfile gameprofile) { // SportBukkit - rename method to avoid decomp error
         OpListEntry oplistentry = (OpListEntry) this.get(gameprofile);
 
         return oplistentry != null ? oplistentry.a() : 0;
@@ -59,8 +59,4 @@ public class OpList extends JsonList<GameProfile, OpListEntry> {
 
         return (GameProfile) oplistentry.getKey();
     }
-
-    protected String a(Object object) {
-        return this.c((GameProfile) object);
-    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketEncoder.java b/src/main/java/net/minecraft/server/PacketEncoder.java
index a6da6f5..c81822d 100644
--- a/src/main/java/net/minecraft/server/PacketEncoder.java
+++ b/src/main/java/net/minecraft/server/PacketEncoder.java
@@ -48,7 +48,7 @@ public class PacketEncoder extends MessageToByteEncoder<Packet<?>> {
         }
     }
 
-    protected void encode(ChannelHandlerContext channelhandlercontext, Object object, ByteBuf bytebuf) throws Exception {
+    protected void encode(ChannelHandlerContext channelhandlercontext, Packet<?> object, ByteBuf bytebuf) throws Exception { // SportBukkit - fix decomp error
         this.a(channelhandlercontext, (Packet) object, bytebuf);
     }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java b/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
index c67cb54..458b4da 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
@@ -17,7 +17,7 @@ public class PacketPlayInUseEntity implements Packet<PacketListenerPlayIn> {
         this.action = PacketPlayInUseEntity.EnumEntityUseAction.ATTACK;
     }
 
-    public void a(PacketDataSerializer packetdataserializer) throws IOException {
+    public void a(PacketDataSerializer packetdataserializer) { // SportBukkit - remove throws
         this.a = packetdataserializer.g();
         this.action = (PacketPlayInUseEntity.EnumEntityUseAction) packetdataserializer.a(PacketPlayInUseEntity.EnumEntityUseAction.class);
         if (this.action == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT_AT) {
@@ -30,7 +30,7 @@ public class PacketPlayInUseEntity implements Packet<PacketListenerPlayIn> {
 
     }
 
-    public void b(PacketDataSerializer packetdataserializer) throws IOException {
+    public void b(PacketDataSerializer packetdataserializer) { // SportBukkit - remove throws
         packetdataserializer.d(this.a);
         packetdataserializer.a((Enum) this.action);
         if (this.action == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT_AT) {
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java b/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java
index 736015c..030f02f 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutNamedSoundEffect.java
@@ -37,7 +37,7 @@ public class PacketPlayOutNamedSoundEffect implements Packet<PacketListenerPlayO
     }
 
     public void b(PacketDataSerializer packetdataserializer) throws IOException {
-        packetdataserializer.d(SoundEffect.a.a((Object) this.a));
+        packetdataserializer.d(SoundEffect.a.a(this.a)); // SportBukkit - fix decompile error
         packetdataserializer.a((Enum) this.b);
         packetdataserializer.writeInt(this.c);
         packetdataserializer.writeInt(this.d);
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
index 6c86341..c0d0ba5 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
@@ -26,7 +26,7 @@ public class PacketPlayOutSpawnEntityLiving implements Packet<PacketListenerPlay
     public PacketPlayOutSpawnEntityLiving(EntityLiving entityliving) {
         this.a = entityliving.getId();
         this.b = entityliving.getUniqueID();
-        this.c = EntityTypes.b.a((Object) entityliving.getClass());
+        this.c = EntityTypes.b.a(entityliving.getClass()); // SportBukkit - fix decomp
         this.d = entityliving.locX;
         this.e = entityliving.locY;
         this.f = entityliving.locZ;
diff --git a/src/main/java/net/minecraft/server/PacketStatusOutServerInfo.java b/src/main/java/net/minecraft/server/PacketStatusOutServerInfo.java
index 3926495..8245cb5 100644
--- a/src/main/java/net/minecraft/server/PacketStatusOutServerInfo.java
+++ b/src/main/java/net/minecraft/server/PacketStatusOutServerInfo.java
@@ -6,7 +6,7 @@ import java.io.IOException;
 
 public class PacketStatusOutServerInfo implements Packet<PacketStatusOutListener> {
 
-    private static final Gson a = (new GsonBuilder()).registerTypeAdapter(ServerPing.ServerData.class, new ServerPing.ServerData.Serializer()).registerTypeAdapter(ServerPing.ServerPingPlayerSample.class, new ServerPing.ServerPingPlayerSample.Serializer()).registerTypeAdapter(ServerPing.class, new ServerPing.Serializer()).registerTypeHierarchyAdapter(IChatBaseComponent.class, new IChatBaseComponent.ChatSerializer()).registerTypeHierarchyAdapter(ChatModifier.class, new ChatModifier.ChatModifierSerializer()).registerTypeAdapterFactory(new ChatTypeAdapterFactory()).create();
+    private static final Gson a = (new GsonBuilder()).registerTypeAdapter(ServerPing.ServerData.class, new ServerPing.Serializer()).registerTypeAdapter(ServerPing.ServerPingPlayerSample.class, new ServerPing.Serializer()).registerTypeAdapter(ServerPing.class, new ServerPing.Serializer()).registerTypeHierarchyAdapter(IChatBaseComponent.class, new IChatBaseComponent.ChatSerializer()).registerTypeHierarchyAdapter(ChatModifier.class, new ChatModifier.ChatModifierSerializer()).registerTypeAdapterFactory(new ChatTypeAdapterFactory()).create();
     private ServerPing b;
 
     public PacketStatusOutServerInfo() {}
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 0c98902..73c6d96 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -767,7 +767,7 @@ public abstract class PlayerList {
 
     public void f(EntityPlayer entityplayer) {
         GameProfile gameprofile = entityplayer.getProfile();
-        int i = this.isOp(gameprofile) ? this.operators.a(gameprofile) : 0;
+        int i = this.isOp(gameprofile) ? this.operators.getLevel(gameprofile) : 0; // SportBukkit - rename method to avoid decomp error
 
         i = this.server.R() && this.server.worldServer[0].getWorldData().u() ? 4 : i;
         i = this.u ? 4 : i;
diff --git a/src/main/java/net/minecraft/server/ServerConnection.java b/src/main/java/net/minecraft/server/ServerConnection.java
index b85c1c5..b92d916 100644
--- a/src/main/java/net/minecraft/server/ServerConnection.java
+++ b/src/main/java/net/minecraft/server/ServerConnection.java
@@ -58,8 +58,10 @@ public class ServerConnection {
     };
     private final MinecraftServer f;
     public volatile boolean d;
-    private final List<ChannelFuture> g = Collections.synchronizedList(Lists.newArrayList());
-    private final List<NetworkManager> h = Collections.synchronizedList(Lists.newArrayList());
+    // SportBukkit start - fix decomp errors
+    private final List<ChannelFuture> g = Collections.synchronizedList(Lists.<ChannelFuture>newArrayList());
+    private final List<NetworkManager> h = Collections.synchronizedList(Lists.<NetworkManager>newArrayList());
+    // SportBukkit end
 
     public ServerConnection(MinecraftServer minecraftserver) {
         this.f = minecraftserver;
@@ -151,7 +153,7 @@ public class ServerConnection {
                             ServerConnection.e.warn("Failed to handle packet for {}", networkmanager.getSocketAddress(), exception);
                             final ChatComponentText chatcomponenttext = new ChatComponentText("Internal server error");
 
-                            networkmanager.sendPacket(new PacketPlayOutKickDisconnect(chatcomponenttext), new GenericFutureListener() {
+                            networkmanager.sendPacket(new PacketPlayOutKickDisconnect(chatcomponenttext), new GenericFutureListener<Future<? super Void>>() { // SportBukkit - fix decomp error
                                 public void operationComplete(Future<? super Void> future) throws Exception {
                                     networkmanager.close(chatcomponenttext);
                                 }
diff --git a/src/main/java/net/minecraft/server/WhiteList.java b/src/main/java/net/minecraft/server/WhiteList.java
index 85085d5..be2f4c1 100644
--- a/src/main/java/net/minecraft/server/WhiteList.java
+++ b/src/main/java/net/minecraft/server/WhiteList.java
@@ -52,7 +52,9 @@ public class WhiteList extends JsonList<GameProfile, WhiteListEntry> {
         return (GameProfile) whitelistentry.getKey();
     }
 
+    /* SportBukkit - fix decomp error
     protected String a(Object object) {
         return this.b((GameProfile) object);
     }
+    SportBukkit */
 }
