From c7b448e69e199275f61772e304bc6d06fabffefe Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Thu, 4 Feb 2016 04:59:57 -0500
Subject: [PATCH] Implement minecraft-api


diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index b3fd66c..b46a89b 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -81,6 +81,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     public boolean joining = true;
     public boolean sentListPacket = false;
     public String hostname;
+    public int protocolVersion;
     // CraftBukkit end
 
     public EntityPlayer(MinecraftServer minecraftserver, WorldServer worldserver, GameProfile gameprofile, PlayerInteractManager playerinteractmanager) {
diff --git a/src/main/java/net/minecraft/server/HandshakeListener.java b/src/main/java/net/minecraft/server/HandshakeListener.java
index 1d857d9..3f95a5f 100644
--- a/src/main/java/net/minecraft/server/HandshakeListener.java
+++ b/src/main/java/net/minecraft/server/HandshakeListener.java
@@ -70,6 +70,7 @@ public class HandshakeListener implements PacketHandshakingInListener {
                 this.b.sendPacket(new PacketLoginOutDisconnect(chatmessage));
                 this.b.close(chatmessage);
             } else {
+                this.b.protocolVersion = packethandshakinginsetprotocol.b(); // SportBukkit
                 this.b.setPacketListener(new LoginListener(this.a, this.b));
 
                 // SportBukkit Start - BungeeCord support
diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index d0112b2..93a7fb9 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -70,6 +70,7 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet<?>> {
     public java.util.UUID spoofedUUID;
     public com.mojang.authlib.properties.Property[] spoofedProfile;
     // SportBukkit End
+    public int protocolVersion; // SportBukkit
     private PacketListener m;
     private IChatBaseComponent n;
     private boolean o;
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index df0886b..3c4bcfd 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -499,6 +499,7 @@ public abstract class PlayerList {
 
         EntityPlayer entity = new EntityPlayer(server, server.getWorldServer(0), gameprofile, new PlayerInteractManager(server.getWorldServer(0)));
         entity.hostname = hostname;
+        entity.protocolVersion = loginlistener.networkManager.protocolVersion; // Can't reach NetworkManager through CraftPlayer at this point, so copy the value
 
         Player player = entity.getBukkitEntity();
         PlayerLoginEvent event = new PlayerLoginEvent(player, hostname, ((java.net.InetSocketAddress) socketaddress).getAddress());
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index bdba091..abb6957 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -23,6 +23,7 @@ import java.util.regex.Pattern;
 
 import javax.imageio.ImageIO;
 
+import com.google.common.collect.*;
 import net.md_5.bungee.api.chat.BaseComponent;
 import net.minecraft.server.*;
 
@@ -119,10 +120,6 @@ import org.apache.commons.lang.Validate;
 import com.google.common.base.Charsets;
 import com.google.common.base.Function;
 import com.google.common.base.Preconditions;
-import com.google.common.collect.ImmutableList;
-import com.google.common.collect.Iterators;
-import com.google.common.collect.Lists;
-import com.google.common.collect.MapMaker;
 import com.mojang.authlib.GameProfile;
 
 import io.netty.buffer.ByteBuf;
@@ -133,6 +130,7 @@ import jline.console.ConsoleReader;
 import org.bukkit.NamespacedKey;
 import org.bukkit.craftbukkit.util.CraftNamespacedKey;
 import org.bukkit.event.server.TabCompleteEvent;
+import tc.oc.minecraft.api.plugin.PluginFinder;
 
 public final class CraftServer implements Server {
     private static final Player[] EMPTY_PLAYER_ARRAY = new Player[0];
@@ -633,6 +631,11 @@ public final class CraftServer implements Server {
     }
 
     @Override
+    public PluginFinder getPluginFinder() {
+        return pluginManager;
+    }
+
+    @Override
     public CraftScheduler getScheduler() {
         return scheduler;
     }
@@ -1811,4 +1814,16 @@ public final class CraftServer implements Server {
             player.sendMessage(components);
         }
     }
+
+    @Override
+    public Set<Integer> getProtocolVersions() {
+        return ImmutableSet.of(
+            4, 5,               // 1.7
+            47,                 // 1.8
+            107, 108, 109, 110, // 1.9
+            210,                // 1.10
+            315, 316,           // 1.11
+            335, 338, 340       // 1.12
+        );
+    }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java b/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java
index be7f7d8..4a29535 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/ProxiedNativeCommandSender.java
@@ -3,6 +3,8 @@ package org.bukkit.craftbukkit.command;
 
 import java.util.Collection;
 import java.util.Set;
+
+import net.md_5.bungee.api.chat.BaseComponent;
 import net.minecraft.server.ICommandListener;
 
 import org.bukkit.Server;
@@ -50,6 +52,16 @@ public class ProxiedNativeCommandSender implements ProxiedCommandSender {
     }
 
     @Override
+    public void sendMessage(BaseComponent... message) {
+        getCaller().sendMessage(message);
+    }
+
+    @Override
+    public void sendMessage(BaseComponent message) {
+        getCaller().sendMessage(message);
+    }
+
+    @Override
     public Server getServer() {
         return getCallee().getServer();
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/command/ServerCommandSender.java b/src/main/java/org/bukkit/craftbukkit/command/ServerCommandSender.java
index 716f7c8..6bae368 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/ServerCommandSender.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/ServerCommandSender.java
@@ -1,5 +1,6 @@
 package org.bukkit.craftbukkit.command;
 
+import net.md_5.bungee.api.chat.BaseComponent;
 import org.bukkit.Bukkit;
 import org.bukkit.Server;
 import org.bukkit.command.CommandSender;
@@ -134,4 +135,14 @@ public abstract class ServerCommandSender implements CommandSender {
     public String getName(CommandSender viewer) {
         return this.getName();
     }
+
+    @Override
+    public void sendMessage(BaseComponent... message) {
+        sendMessage(BaseComponent.toLegacyText(message));
+    }
+
+    @Override
+    public void sendMessage(BaseComponent message) {
+        sendMessage(BaseComponent.toLegacyText(message));
+    }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 99c6b9f..04196d6 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -9,6 +9,7 @@ import java.util.List;
 import java.util.Set;
 import java.util.UUID;
 
+import net.md_5.bungee.api.chat.BaseComponent;
 import net.minecraft.server.*;
 
 import org.bukkit.EntityEffect;
@@ -566,6 +567,14 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
     }
 
     @Override
+    public void sendMessage(BaseComponent... message) {
+    }
+
+    @Override
+    public void sendMessage(BaseComponent message) {
+    }
+
+    @Override
     public String getName() {
         return getHandle().getName();
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index e8af5bb..d9442e5 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -26,7 +26,10 @@ import java.util.WeakHashMap;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+import net.md_5.bungee.api.ChatMessageType;
 import net.md_5.bungee.api.chat.BaseComponent;
+import net.md_5.bungee.api.chat.TextComponent;
+
 import net.minecraft.server.*;
 import net.minecraft.server.PacketPlayOutTitle.EnumTitleAction;
 
@@ -1885,6 +1888,41 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     }
 
     @Override
+    public java.util.Locale getCurrentLocale() {
+        try {
+            final String[] parts = getLocale().split("[-_]");
+            switch(parts.length) {
+                case 0: return java.util.Locale.US;
+                case 1: return new Locale(parts[0]);
+                case 2: return new Locale(parts[0], parts[1]);
+                default: return new Locale(parts[0], parts[1], parts[2]);
+            }
+        } catch(IllegalArgumentException e) {
+            return java.util.Locale.US;
+        }
+    }
+
+    @Override
+    public void sendMessage(net.md_5.bungee.api.ChatMessageType position, BaseComponent... message) {
+        if ( getHandle().playerConnection == null ) return;
+
+        PacketPlayOutChat packet = new PacketPlayOutChat(null, net.minecraft.server.ChatMessageType.a(((byte) position.ordinal())));
+        if(position == ChatMessageType.ACTION_BAR) {
+            // Work around a client bug where component text above the hotbar is not formatted.
+            // The only way to format it is by wrapping legacy formatting in a text component.
+            packet.components = new BaseComponent[]{ new TextComponent(TextComponent.toLegacyText(message)) };
+        } else {
+            packet.components = message;
+        }
+        getHandle().playerConnection.sendPacket(packet);
+    }
+
+    @Override
+    public void sendMessage(net.md_5.bungee.api.ChatMessageType position, BaseComponent message) {
+        sendMessage(position, new BaseComponent[] {message});
+    }
+
+    @Override
     public void sendMessage(BaseComponent component) {
         sendMessage( new BaseComponent[] { component } );
     }
@@ -1995,4 +2033,9 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     public RayBlockIntersection getTargetedBlock(boolean nonSolids, boolean liquids) {
         return getTargetedBlock(getBlockReach(), nonSolids, liquids);
     }
+
+    @Override
+    public int getProtocolVersion() {
+        return getHandle().protocolVersion;
+    }
 }
