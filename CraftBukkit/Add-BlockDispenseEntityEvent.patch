From 56e2a8ffeb56c8ff3973a0329ea6cad010575813 Mon Sep 17 00:00:00 2001
From: YukonAppleGeek <yukonvinecki@gmail.com>
Date: Fri, 12 Apr 2013 21:34:01 -0700
Subject: [PATCH] Add BlockDispenseEntityEvent


diff --git a/src/main/java/net/minecraft/server/DispenseBehaviorItem.java b/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
index e9aaddb..b17033f 100644
--- a/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
+++ b/src/main/java/net/minecraft/server/DispenseBehaviorItem.java
@@ -2,7 +2,7 @@ package net.minecraft.server;
 
 // CraftBukkit start
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
-import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.event.block.BlockDispenseEntityEvent;
 // CraftBukkit end
 
 public class DispenseBehaviorItem implements IDispenseBehavior {
@@ -58,7 +58,7 @@ public class DispenseBehaviorItem implements IDispenseBehavior {
         org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
         CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack);
 
-        BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(entityitem.motX, entityitem.motY, entityitem.motZ));
+        BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), entityitem.getBukkitEntity());
         if (!BlockDispenser.eventFired) {
             world.getServer().getPluginManager().callEvent(event);
         }
@@ -68,9 +68,8 @@ public class DispenseBehaviorItem implements IDispenseBehavior {
         }
 
         entityitem.setItemStack(CraftItemStack.asNMSCopy(event.getItem()));
-        entityitem.motX = event.getVelocity().getX();
-        entityitem.motY = event.getVelocity().getY();
-        entityitem.motZ = event.getVelocity().getZ();
+        entityitem.getBukkitEntity().setLocationDirect(event.getLocation());
+        entityitem.getBukkitEntity().setVelocity(event.getVelocity());
 
         if (!event.getItem().getType().equals(craftItem.getType())) {
             // Chain to handler for new item
diff --git a/src/main/java/net/minecraft/server/DispenseBehaviorProjectile.java b/src/main/java/net/minecraft/server/DispenseBehaviorProjectile.java
index 2c7b571..91c6e05 100644
--- a/src/main/java/net/minecraft/server/DispenseBehaviorProjectile.java
+++ b/src/main/java/net/minecraft/server/DispenseBehaviorProjectile.java
@@ -2,7 +2,7 @@ package net.minecraft.server;
 
 // CraftBukkit start
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
-import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.event.block.BlockDispenseEntityEvent;
 // CraftBukkit end
 
 public abstract class DispenseBehaviorProjectile extends DispenseBehaviorItem {
@@ -21,7 +21,7 @@ public abstract class DispenseBehaviorProjectile extends DispenseBehaviorItem {
         org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
         CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-        BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector((double) enumdirection.getAdjacentX(), (double) ((float) enumdirection.getAdjacentY() + 0.1F), (double) enumdirection.getAdjacentZ()));
+        BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), ((Entity) iprojectile).getBukkitEntity(), ((Entity) iprojectile).getBukkitEntity().getLocation(), new org.bukkit.util.Vector((double) enumdirection.getAdjacentX(), (double) ((float) enumdirection.getAdjacentY() + 0.1F), (double) enumdirection.getAdjacentZ()));
         if (!BlockDispenser.eventFired) {
             world.getServer().getPluginManager().callEvent(event);
         }
@@ -42,6 +42,7 @@ public abstract class DispenseBehaviorProjectile extends DispenseBehaviorItem {
             }
         }
 
+        ((Entity) iprojectile).getBukkitEntity().setLocationDirect(event.getLocation());
         iprojectile.shoot(event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), this.getPower(), this.a());
         ((Entity) iprojectile).projectileSource = new org.bukkit.craftbukkit.projectiles.CraftBlockProjectileSource((TileEntityDispenser) isourceblock.getTileEntity());
         // CraftBukkit end
diff --git a/src/main/java/net/minecraft/server/DispenserRegistry.java b/src/main/java/net/minecraft/server/DispenserRegistry.java
index fb1d640..5c6b259 100644
--- a/src/main/java/net/minecraft/server/DispenserRegistry.java
+++ b/src/main/java/net/minecraft/server/DispenserRegistry.java
@@ -3,17 +3,19 @@ package net.minecraft.server;
 import com.mojang.authlib.GameProfile;
 import java.io.File;
 import java.io.PrintStream;
+import java.util.List;
 import java.util.Random;
 import java.util.UUID;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 // CraftBukkit start
-import java.util.List;
 import org.bukkit.Location;
 import org.bukkit.TreeType;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.entity.Fireball;
 import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.event.block.BlockDispenseEntityEvent;
 import org.bukkit.event.world.StructureGrowEvent;
 // CraftBukkit end
 
@@ -125,7 +127,14 @@ public class DispenserRegistry {
                 org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-                BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d0, d1, d2));
+                Entity entity = ItemMonsterEgg.spawnCreature(isourceblock.getWorld(), ItemMonsterEgg.h(itemstack), d0, d1, d2, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DISPENSE_EGG);
+                if(entity == null) {
+                    // This happens if the spawn event is cancelled
+                    itemstack.setCount(itemstack.getCount() + 1);
+                    return itemstack;
+                }
+
+                BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), entity.getBukkitEntity());
                 if (!BlockDispenser.eventFired) {
                     world.getServer().getPluginManager().callEvent(event);
                 }
@@ -146,9 +155,8 @@ public class DispenserRegistry {
                     }
                 }
 
-                itemstack1 = CraftItemStack.asNMSCopy(event.getItem());
-
-                Entity entity = ItemMonsterEgg.spawnCreature(isourceblock.getWorld(), ItemMonsterEgg.h(itemstack), event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DISPENSE_EGG);
+                entity.getBukkitEntity().setLocationDirect(event.getLocation());
+                entity.getBukkitEntity().setVelocity(event.getVelocity());
 
                 if (entity instanceof EntityLiving && itemstack.hasName()) {
                     entity.setCustomName(itemstack.getName());
@@ -172,7 +180,9 @@ public class DispenserRegistry {
                 org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-                BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d0, d1, d2));
+                EntityFireworks entityfireworks = new EntityFireworks(isourceblock.getWorld(), d0, d1, d2, itemstack);
+
+                BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), entityfireworks.getBukkitEntity());
                 if (!BlockDispenser.eventFired) {
                     world.getServer().getPluginManager().callEvent(event);
                 }
@@ -193,8 +203,9 @@ public class DispenserRegistry {
                     }
                 }
 
-                itemstack1 = CraftItemStack.asNMSCopy(event.getItem());
-                EntityFireworks entityfireworks = new EntityFireworks(isourceblock.getWorld(), event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), itemstack1);
+                entityfireworks.getDataWatcher().set(EntityFireworks.FIREWORK_ITEM, CraftItemStack.asNMSCopy(event.getItem()));
+                entityfireworks.setPosition(event.getLocation().getX(), event.getLocation().getY(), event.getLocation().getZ());
+                entityfireworks.getBukkitEntity().setVelocity(event.getVelocity());
 
                 isourceblock.getWorld().addEntity(entityfireworks);
                 // itemstack.subtract(1); // Handled during event processing
@@ -224,7 +235,9 @@ public class DispenserRegistry {
                 org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-                BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d3, d4, d5));
+                EntitySmallFireball fireball = new EntitySmallFireball(world, d0, d1, d2, d3, d4, d5);
+
+                BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), fireball.getBukkitEntity(), fireball.getBukkitEntity().getLocation(), ((org.bukkit.entity.Fireball) fireball.getBukkitEntity()).getDirection());
                 if (!BlockDispenser.eventFired) {
                     world.getServer().getPluginManager().callEvent(event);
                 }
@@ -245,8 +258,10 @@ public class DispenserRegistry {
                     }
                 }
 
-                EntitySmallFireball fireball = new EntitySmallFireball(world, d0, d1, d2, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ());
+
                 fireball.projectileSource = new org.bukkit.craftbukkit.projectiles.CraftBlockProjectileSource((TileEntityDispenser) isourceblock.getTileEntity());
+                fireball.getBukkitEntity().setLocationDirect(event.getLocation());
+                ((Fireball) fireball.getBukkitEntity()).setDirection(event.getVelocity()); // don't call the NMS version because it randomizes the value
 
                 world.addEntity(fireball);
                 // itemstack.subtract(1); // Handled during event processing
@@ -509,7 +524,9 @@ public class DispenserRegistry {
                 org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-                BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector((double) blockposition.getX() + 0.5D, (double) blockposition.getY(), (double) blockposition.getZ() + 0.5D));
+                EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(world, (double) blockposition.getX() + 0.5D, (double) blockposition.getY(), (double) blockposition.getZ() + 0.5D, (EntityLiving) null);
+
+                BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), entitytntprimed.getBukkitEntity());
                 if (!BlockDispenser.eventFired) {
                    world.getServer().getPluginManager().callEvent(event);
                 }
@@ -530,7 +547,9 @@ public class DispenserRegistry {
                     }
                 }
 
-                EntityTNTPrimed entitytntprimed = new EntityTNTPrimed(world, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), (EntityLiving) null);
+                entitytntprimed.getBukkitEntity().setLocationDirect(event.getLocation());
+                entitytntprimed.getBukkitEntity().setVelocity(event.getVelocity());
+
                 // CraftBukkit end
 
                 world.addEntity(entitytntprimed);
@@ -826,7 +845,9 @@ public class DispenserRegistry {
             org.bukkit.block.Block block = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
             CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-            BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d0, d1 + d3, d2));
+            EntityBoat entityboat = new EntityBoat(world, d0, d1 + d3, d2);
+
+            BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block, craftItem.clone(), entityboat.getBukkitEntity());
             if (!BlockDispenser.eventFired) {
                 world.getServer().getPluginManager().callEvent(event);
             }
@@ -847,7 +868,9 @@ public class DispenserRegistry {
                 }
             }
 
-            EntityBoat entityboat = new EntityBoat(world, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ());
+            entityboat.getBukkitEntity().setLocationDirect(event.getLocation());
+            entityboat.getBukkitEntity().setVelocity(event.getVelocity());
+
             // CraftBukkit end
 
             entityboat.setType(this.c);
diff --git a/src/main/java/net/minecraft/server/ItemMinecart.java b/src/main/java/net/minecraft/server/ItemMinecart.java
index ac807ce..8ea9fc3 100644
--- a/src/main/java/net/minecraft/server/ItemMinecart.java
+++ b/src/main/java/net/minecraft/server/ItemMinecart.java
@@ -3,6 +3,7 @@ package net.minecraft.server;
 // CraftBukkit start
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.bukkit.event.block.BlockDispenseEvent;
+import org.bukkit.event.block.BlockDispenseEntityEvent;
 // CraftBukkit end
 
 public class ItemMinecart extends Item {
@@ -48,7 +49,8 @@ public class ItemMinecart extends Item {
             org.bukkit.block.Block block2 = world.getWorld().getBlockAt(isourceblock.getBlockPosition().getX(), isourceblock.getBlockPosition().getY(), isourceblock.getBlockPosition().getZ());
             CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
 
-            BlockDispenseEvent event = new BlockDispenseEvent(block2, craftItem.clone(), new org.bukkit.util.Vector(d0, d1 + d3, d2));
+            EntityMinecartAbstract entityminecartabstract = EntityMinecartAbstract.a(world, d0, d1 + d3, d2, ((ItemMinecart) itemstack1.getItem()).b);
+            BlockDispenseEntityEvent event = new BlockDispenseEntityEvent(block2, craftItem.clone(), entityminecartabstract.getBukkitEntity());
             if (!BlockDispenser.eventFired) {
                 world.getServer().getPluginManager().callEvent(event);
             }
@@ -69,8 +71,8 @@ public class ItemMinecart extends Item {
                 }
             }
 
-            itemstack1 = CraftItemStack.asNMSCopy(event.getItem());
-            EntityMinecartAbstract entityminecartabstract = EntityMinecartAbstract.a(world, event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ(), ((ItemMinecart) itemstack1.getItem()).b);
+            entityminecartabstract.getBukkitEntity().setLocationDirect(event.getLocation());
+            entityminecartabstract.getBukkitEntity().setVelocity(event.getVelocity());
 
             if (itemstack.hasName()) {
                 entityminecartabstract.setCustomName(itemstack.getName());
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 961cf24..3ce1e67 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -267,6 +267,13 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         return entity.world.getWorld();
     }
 
+    /**
+     * Passively set location (internal use only)
+     */
+    public void setLocationDirect(Location location) {
+        getHandle().setLocation(location.getX(), location.getY(), location.getZ(), location.getYaw(), location.getPitch());
+    }
+
     public boolean teleport(Location location) {
         return teleport(location, TeleportCause.PLUGIN);
     }
